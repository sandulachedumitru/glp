openapi: "3.0.3"
info:
  title: "GLP Server API"
  description: "Guitar Lesson Planner Server API"
  version: "1.0.0"
servers:
  - url: "https://localhost:8080"
tags:
  - name: student
    description: Everything about your Student
paths:
  /student:
    post:
      tags:
        - student
      summary: "POST student"
      operationId: "createNewStudent"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StudentDto"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseEntity"
    get:
      tags:
        - student
      summary: "GET student"
      operationId: "findAllStudents"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseEntity"
    put:
      tags:
        - student
      summary: "PUT student"
      operationId: "updateStudent"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/HelperUpdateStudent"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseEntity"
  /student/id/{studentId}:
    get:
      tags:
        - student
      summary: "GET student/id/{studentId}"
      operationId: "findStudentById"
      parameters:
        - name: "studentId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseEntity"
    delete:
      tags:
        - student
      summary: "DELETE student/id/{studentId}"
      operationId: "deleteStudentById"
      parameters:
        - name: "studentId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseEntity"
  /student/email/{studentEmail}:
    get:
      tags:
        - student
      summary: "GET student/email/{studentEmail}"
      operationId: "findStudentByEmail"
      parameters:
        - name: "studentEmail"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseEntity"
    delete:
      tags:
        - student
      summary: "DELETE student/email/{studentEmail}"
      operationId: "deleteStudentByEmail"
      parameters:
        - name: "studentEmail"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseEntity"
  /student/name:
    get:
      tags:
        - student
      summary: "GET student/name"
      operationId: "findStudentByFirstNameAndLastName"
      parameters:
        - name: "studentFirstName"
          in: "query"
          required: true
          schema:
            type: "string"
        - name: "studentLastName"
          in: "query"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseEntity"
    delete:
      tags:
        - student
      summary: "DELETE student/name"
      operationId: "deleteStudentByFirstNameAndLastName"
      parameters:
        - name: "studentFirstName"
          in: "query"
          required: true
          schema:
            type: "string"
        - name: "studentLastName"
          in: "query"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseEntity"
components:
  schemas:
    StudentDto:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        createdAt:
          type: "string"
          format: "date"
        firstName:
          type: "string"
        lastName:
          type: "string"
        email:
          type: "string"
    HttpHeaders:
      type: "object"
      properties: { }
    ResponseEntity:
      type: "object"
      properties:
        headers:
          $ref: "#/components/schemas/HttpHeaders"
    HelperUpdateStudent:
      type: "object"
      properties:
        fromStudentDto:
          $ref: "#/components/schemas/StudentDto"
        toStudentDto:
          $ref: "#/components/schemas/StudentDto"
